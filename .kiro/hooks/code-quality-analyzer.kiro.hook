{
  "enabled": true,
  "name": "Code Quality Analyzer",
  "description": "Monitors source code files for changes and analyzes modified code for potential improvements including code smells, design patterns, and best practices. Generates suggestions for improving readability, maintainability, and performance while preserving functionality.",
  "version": "1",
  "when": {
    "type": "fileEdited",
    "patterns": [
      "**/*.js",
      "**/*.ts",
      "**/*.jsx",
      "**/*.tsx",
      "**/*.py",
      "**/*.java",
      "**/*.cpp",
      "**/*.c",
      "**/*.cs",
      "**/*.php",
      "**/*.rb",
      "**/*.go",
      "**/*.rs",
      "**/*.kt",
      "**/*.swift",
      "**/*.scala",
      "**/*.vue",
      "**/*.svelte"
    ]
  },
  "then": {
    "type": "askAgent",
    "prompt": "Analyze the modified code in the changed files for potential improvements. Focus on:\n\n1. **Code Smells**: Identify any code smells like long methods, large classes, duplicate code, or complex conditionals\n2. **Design Patterns**: Suggest appropriate design patterns that could improve the code structure\n3. **Best Practices**: Check adherence to language-specific best practices and coding standards\n4. **Readability**: Suggest improvements for variable naming, code organization, and documentation\n5. **Maintainability**: Identify areas that could be refactored for easier maintenance\n6. **Performance**: Suggest optimizations that could improve performance without breaking functionality\n\nFor each suggestion, provide:\n- Clear explanation of the issue or improvement opportunity\n- Specific code examples showing the current approach and recommended changes\n- Rationale for why the change would be beneficial\n- Any potential risks or considerations\n\nMaintain the existing functionality while focusing on code quality improvements."
  }
}